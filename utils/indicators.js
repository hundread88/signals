/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
 */
function getLineValue(p1, p2, currentX) {
  if (!p1 || !p2 || p1.index === p2.index) return null;
  const slope = (p2.value - p1.value) / (p2.index - p1.index);
  return slope * (currentX - p1.index) + p1.value;
}

function findFractals(data, type) {
  const fractals = [];
  for (let i = 2; i < data.length - 2; i++) {
    const isHigh = type === 'high' && data[i] > data[i-1] && data[i] > data[i-2] && data[i] > data[i+1] && data[i] > data[i+2];
    const isLow = type === 'low' && data[i] < data[i-1] && data[i] < data[i-2] && data[i] < data[i+1] && data[i] < data[i+2];
    if (isHigh || isLow) {
      fractals.push({ index: i, value: data[i] });
    }
  }
  return fractals;
}

function average(arr) {
  if (arr.length === 0) return 0;
  return arr.reduce((sum, val) => sum + val, 0) / arr.length;
}

/**
 * –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ (—Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏ —Å–ø–∏—Å–∫–∏ —Ñ—Ä–∞–∫—Ç–∞–ª–æ–≤)
 */
export function calculateIndicators(candles) {
  const closes = candles.map(c => parseFloat(c[4]));
  const highs = candles.map(c => parseFloat(c[2]));
  const lows = candles.map(c => parseFloat(c[3]));

  if (closes.length < 30) {
    return { error: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö." };
  }

  const ma7 = average(closes.slice(-7));
  const ma26 = average(closes.slice(-26));
  const trend = ma7 > ma26 ? 'up' : ma7 < ma26 ? 'down' : 'sideways';

  const allHighFractals = findFractals(highs, 'high');
  const allLowFractals = findFractals(lows, 'low');

  // –õ–æ–≥–∏–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –Ω–∞–∫–ª–æ–Ω–Ω—ã—Ö –æ—Å—Ç–∞–µ—Ç—Å—è –¥–ª—è —Å—Ç–∞—Ä—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
  let resistance = null, support = null;
  if (allHighFractals.length >= 2) {
      resistance = getLineValue(allHighFractals.at(-2), allHighFractals.at(-1), candles.length - 1);
  }
  if (allLowFractals.length >= 2) {
      support = getLineValue(allLowFractals.at(-2), allLowFractals.at(-1), candles.length - 1);
  }

  return {
    ma26, support, resistance,
    allHighFractals, allLowFractals, // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–Ω—ã–µ —Å–ø–∏—Å–∫–∏
    lastCandle: { close: closes.at(-1) },
    prevCandle: { close: closes.at(-2) },
  };
}

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ (–ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–∞)
 */
export function checkSignals(indicators, lastSignal, candles) {
    const { ma26, support, resistance, allHighFractals, allLowFractals, lastCandle, prevCandle } = indicators;
    if (!lastCandle || !prevCandle) return null;

    let newSignal = null;

    // --- –ë–õ–û–ö 1: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã –æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ—Ä–∞–∫—Ç–∞–ª–æ–≤ ---
    const newlyConfirmedFractalIndex = candles.length - 3; // –§—Ä–∞–∫—Ç–∞–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 2 —Å–≤–µ—á–∏
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ–≤—ã–π –í–ï–†–•–ù–ò–ô —Ñ—Ä–∞–∫—Ç–∞–ª
    const newHighFractal = allHighFractals.find(f => f.index === newlyConfirmedFractalIndex);
    if (newHighFractal) {
        const previousHighs = allHighFractals.filter(f => f.index < newlyConfirmedFractalIndex).slice(-5);
        if (previousHighs.length > 0) {
            const isHighest = previousHighs.every(pf => newHighFractal.value > pf.value);
            const isLower = previousHighs.some(pf => newHighFractal.value < pf.value);

            if (isHighest) {
                newSignal = { type: 'info_new_high_peak', message: `üìà –ù–æ–≤—ã–π –ø–∏–∫–æ–≤—ã–π —Ñ—Ä–∞–∫—Ç–∞–ª —Å–≤–µ—Ä—Ö—É (${newHighFractal.value.toFixed(4)}). –ù–∞–∫–ª–æ–Ω–Ω–∞—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç/—Å–ª–æ–º–∞–Ω–∞.` };
            } else if (isLower) {
                newSignal = { type: 'info_new_high_trend', message: `üî¥ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π —Ñ—Ä–∞–∫—Ç–∞–ª —Å–≤–µ—Ä—Ö—É (${newHighFractal.value.toFixed(4)}), –Ω–∏–∂–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö. –í–µ—Ä–æ—è—Ç–Ω–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∏—Å—Ö–æ–¥—è—â–µ–π –Ω–∞–∫–ª–æ–Ω–Ω–æ–π.` };
            }
        }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ–≤—ã–π –ù–ò–ñ–ù–ò–ô —Ñ—Ä–∞–∫—Ç–∞–ª (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ —Å–∏–≥–Ω–∞–ª–∞ –æ –≤–µ—Ä—Ö–Ω–µ–º)
    if (!newSignal) {
        const newLowFractal = allLowFractals.find(f => f.index === newlyConfirmedFractalIndex);
        if (newLowFractal) {
            const previousLows = allLowFractals.filter(f => f.index < newlyConfirmedFractalIndex).slice(-5);
            if (previousLows.length > 0) {
                const isLowest = previousLows.every(pf => newLowFractal.value < pf.value);
                const isHigher = previousLows.some(pf => newLowFractal.value > pf.value);

                if (isLowest) {
                    newSignal = { type: 'info_new_low_peak', message: `üìâ –ù–æ–≤—ã–π –ø–∏–∫–æ–≤—ã–π —Ñ—Ä–∞–∫—Ç–∞–ª —Å–Ω–∏–∑—É (${newLowFractal.value.toFixed(4)}). –ù–∞–∫–ª–æ–Ω–Ω–∞—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç/—Å–ª–æ–º–∞–Ω–∞.` };
                } else if (isHigher) {
                    newSignal = { type: 'info_new_low_trend', message: `üü¢ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π —Ñ—Ä–∞–∫—Ç–∞–ª —Å–Ω–∏–∑—É (${newLowFractal.value.toFixed(4)}), –≤—ã—à–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö. –í–µ—Ä–æ—è—Ç–Ω–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ—Å—Ö–æ–¥—è—â–µ–π –Ω–∞–∫–ª–æ–Ω–Ω–æ–π.` };
                }
            }
        }
    }
    
    // --- –ë–õ–û–ö 2: –¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã (MA –∏ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –Ω–∞–∫–ª–æ–Ω–Ω—ã—Ö) ---
    // –û–Ω–∏ –±—É–¥—É—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞ –æ —Ñ—Ä–∞–∫—Ç–∞–ª–µ
    if (!newSignal) {
        if (prevCandle.close < ma26 && lastCandle.close > ma26) {
            newSignal = { type: 'ma_buy', message: `üìà –°–∏–≥–Ω–∞–ª –Ω–∞ –ø–æ–∫—É–ø–∫—É (MA)\n–¶–µ–Ω–∞ –ø–µ—Ä–µ—Å–µ–∫–ª–∞ MA26 —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö.` };
        } else if (prevCandle.close > ma26 && lastCandle.close < ma26) {
            newSignal = { type: 'ma_sell', message: `üìâ –°–∏–≥–Ω–∞–ª –Ω–∞ –ø—Ä–æ–¥–∞–∂—É (MA)\n–¶–µ–Ω–∞ –ø–µ—Ä–µ—Å–µ–∫–ª–∞ MA26 —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑.` };
        } else if (resistance && prevCandle.close < resistance && lastCandle.close > resistance) {
            newSignal = { type: 'trend_buy', message: `üìà –°–∏–≥–Ω–∞–ª –Ω–∞ –ø–æ–∫—É–ø–∫—É (–¢—Ä–µ–Ω–¥)\n–¶–µ–Ω–∞ –ø—Ä–æ–±–∏–ª–∞ –ª–∏–Ω–∏—é —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è.` };
        } else if (support && prevCandle.close > support && lastCandle.close < support) {
            newSignal = { type: 'trend_sell', message: `üìâ –°–∏–≥–Ω–∞–ª –Ω–∞ –ø—Ä–æ–¥–∞–∂—É (–¢—Ä–µ–Ω–¥)\n–¶–µ–Ω–∞ –ø—Ä–æ–±–∏–ª–∞ –ª–∏–Ω–∏—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏.` };
        }
    }

    // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –Ω–æ–≤—ã–π –∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
    if (newSignal && (!lastSignal || newSignal.type !== lastSignal.type)) {
        return newSignal;
    }

    return null;
}
